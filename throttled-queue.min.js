"use strict";(function(){var previous_throttledQueue;var root=typeof self==='object'&&self.self===self&&self||typeof global==='object'&&global.global===global&&global||this;if(root!=null){previous_throttledQueue=root.throttledQueue}
var throttledQueue=function(max_requests_per_interval,interval,evenly_spaced){let n=0
let running=!1
if(evenly_spaced){interval=interval/max_requests_per_interval;max_requests_per_interval=1}
if(interval<200){console.warn('An interval of less than 200ms can create performance issues.')}
var queue=[];var last_called=Date.now();const next=function(){running=!0
if(queue.length&&n<max_requests_per_interval){n++
queue.shift()()
next()}else{running=!1}}
var dequeue=function(){var threshold=last_called+interval;var now=Date.now();if(now<threshold){clearTimeout(timeout);timeout=setTimeout(dequeue,threshold-now);return}
n=0
if(!running)next()
last_called=Date.now();timeout=setTimeout(dequeue,interval)};var timeout=setTimeout(dequeue,interval);return function(callback){queue.push(callback);if(!running)next()}};throttledQueue.noConflict=function(){root.throttledQueue=previous_throttledQueue;return throttledQueue};if(typeof module==='object'&&module.exports){module.exports=throttledQueue}
else if(typeof define==='function'&&define.amd){define([],function(){return throttledQueue})}
else{root.throttledQueue=throttledQueue}}).call(this)
